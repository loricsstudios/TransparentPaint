<Window x:Class="Hellosam.Net.TransparentPaint.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Hellosam.Net.TransparentPaint"        
        d:DataContext="{d:DesignInstance Type=local:MainViewModel, IsDesignTimeCreatable=True}"
        mc:Ignorable="d"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        Topmost="{Binding AlwaysOnTop}"
        Title="TransparentPaint" SizeToContent="WidthAndHeight">
    <Window.InputBindings>
        <KeyBinding Key="F1" Command="{Binding ClearInkCommand}" />
        <KeyBinding Key="F2" Command="{Binding UndoCommand}" />
        <KeyBinding Key="F6" Command="{Binding ToggleSnapCommand}" />
        <KeyBinding Key="F12" Command="{Binding CloneWindowCommand}" />
    </Window.InputBindings>
    <StackPanel Orientation="Vertical">
        <StackPanel Orientation="Vertical" MouseDown="Grid_MouseDown">
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Setter Property="Background" Value="{x:Static SystemColors.ActiveCaptionBrush}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSnapped}" Value="True">
                            <Setter Property="Background" Value="{x:Static SystemColors.InactiveCaptionBrush}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="10,0,0,0">
                    <CheckBox Margin="0,0,10,0" IsChecked="{Binding AlwaysOnTop}" VerticalAlignment="Center">Top</CheckBox>

                    <TextBlock Visibility="{Binding EnableSnap, Converter={StaticResource BooleanNotVisibilityConverter}}" MinWidth="100">
                        <TextBox Text="{Binding Width, UpdateSourceTrigger=PropertyChanged}" Width="40" VerticalAlignment="Center" />
                        <TextBlock BaselineOffset="17">x</TextBlock>
                        <TextBox Text="{Binding Height, UpdateSourceTrigger=PropertyChanged}" Width="40" VerticalAlignment="Center" />
                    </TextBlock>
                    <TextBlock Visibility="{Binding EnableSnap, Converter={StaticResource BooleanVisibilityConverter}}" MinWidth="100">
                        <TextBox Text="{Binding RatioWidth, UpdateSourceTrigger=PropertyChanged}" Width="40" VerticalAlignment="Center" />
                        <TextBlock BaselineOffset="17">%</TextBlock>
                        <TextBox Text="{Binding RatioHeight, UpdateSourceTrigger=PropertyChanged}" Width="40" VerticalAlignment="Center" />
                    </TextBlock>

                    <CheckBox IsChecked="{Binding EnableSnap}" VerticalAlignment="Center" Margin="10,0,0,0">🔒 [F6]</CheckBox>
                    <TextBox Text="{Binding SnapName, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,0" Width="150" VerticalAlignment="Center">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsSnapped}" Value="True">
                                        <Setter Property="Background" Value="Yellow" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10,0,10,0" Grid.Column="2">
                    <Button Command="{Binding CloneWindowCommand}" ToolTip="Open Clone [F12]">🔍</Button>
                    <Button Command="{Binding CloseCommand}">❌</Button>
                </StackPanel>
            </Grid>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal">
                    <Button Command="{Binding ClearInkCommand}" Height="30" Width="30" Margin="0,0,10,0" ToolTip="Clear Ink [F1]">🗑</Button>
                    <Button Command="{Binding SetColorCommand}" CommandParameter="{x:Static Colors.Red}" Height="30" Width="30" Background="Red">🖊️</Button>
                    <Button Command="{Binding SetColorCommand}" CommandParameter="{x:Static Colors.Orange}" Height="30" Width="30" Background="Orange">🖊️</Button>
                    <Button Command="{Binding SetColorCommand}" CommandParameter="{x:Static Colors.Yellow}" Height="30" Width="30" Background="Yellow">🖊️</Button>
                    <Button Command="{Binding SetColorCommand}" CommandParameter="{x:Static Colors.ForestGreen}" Height="30" Width="30" Background="ForestGreen">🖊️</Button>
                    <Button Command="{Binding SetColorCommand}" CommandParameter="{x:Static Colors.Cyan}" Height="30" Width="30" Background="Cyan">🖊️</Button>
                    <Button Command="{Binding SetColorCommand}" CommandParameter="{x:Static Colors.Blue}" Height="30" Width="30" Background="Blue">🖊️</Button>
                    <Button Command="{Binding SetColorCommand}" CommandParameter="{x:Static Colors.Lavender}" Height="30" Width="30" Background="Lavender">🖊️</Button>
                    <Button Command="{Binding SetColorCommand}" CommandParameter="{x:Static Colors.White}" Height="30" Width="30" Background="White">🖊️</Button>
                    <Button Command="{Binding SetColorCommand}" CommandParameter="{x:Static Colors.Gray}" Height="30" Width="30" Background="Gray">🖊️</Button>
                    <Button Command="{Binding SetColorCommand}" CommandParameter="{x:Static Colors.Black}" Height="30" Width="30" Background="Black" Foreground="White">🖊️</Button>
                    <Button Command="{Binding UndoCommand}" Height="30" Width="30" Margin="10,0,10,0" ToolTip="Undo [F2]">⎌</Button>
                </StackPanel>
                <TextBlock VerticalAlignment="Center" Margin="10,0,10,0" Grid.Column="2">     
                    <TextBlock BaselineOffset="17">Port</TextBlock>
                    <TextBox Text="{Binding Port, UpdateSourceTrigger=PropertyChanged}" Width="40" VerticalAlignment="Center">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsServerActive}" Value="True">
                                        <Setter Property="Background" Value="LightGreen" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <Button Command="{Binding RestartCommand}" VerticalAlignment="Center" Margin="10,0,0,0">Restart</Button>
                </TextBlock>
            </Grid>
        </StackPanel>
        <Border BorderBrush="Red" BorderThickness="1" HorizontalAlignment="Left" VerticalAlignment="Top">
            <InkCanvas
                    Width="{Binding Width}" Height="{Binding Height}"         
                    Name="Canvas" StrokeCollected="Canvas_StrokeCollected" StrokeErased="Canvas_StrokeErased">
                <InkCanvas.DefaultDrawingAttributes>
                    <DrawingAttributes Color="Red" Height="3" Width="3" IsHighlighter="False" />
                </InkCanvas.DefaultDrawingAttributes>
                <InkCanvas.Background>
                    <SolidColorBrush Color="White" Opacity="0.01"/>
                </InkCanvas.Background>
            </InkCanvas>
        </Border>
    </StackPanel>
</Window>
